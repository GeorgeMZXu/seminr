% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/bootstrap.R
\name{bootstrap_model}
\alias{bootstrap_model}
\title{seminr bootstrap_model Function}
\usage{
bootstrap_model(data, measurement_model, interactions=NULL, structural_model, nboot = 500)
}
\arguments{
\item{data}{A \code{dataframe} containing the indicator measurement data.}

\item{measurement_model}{A source-to-target matrix representing the outer/measurement model,
generated by \code{measure}.}

\item{interactions}{A object of type \code{interact} as generated by the \code{interact}
method. Default setting is \code{NULL} and can be excluded for models with no interactions.}

\item{structural_model}{A source-to-target matrix representing the inner/structural model,
generated by \code{structure}.}

\item{nboot}{A parameter specifying the number of bootstrap iterations to perform, default
value is 500. If 0 then no bootstrapping is performed.}

\item{...}{A list of parameters inherited from the estimation method \code{simplePLS}.}
}
\description{
The \code{seminr} package provides a natural syntax for researchers to describe PLS
structural equation models. \code{seminr} is compatible with simplePLS.
\code{bootstrap_model} provides the verb for bootstrapping a pls model from the model
parameters and data.
}
\examples{
data("mobi", package = "semPLS")

# seminr syntax for creating measurement model
mobi_mm <- measure(
  reflect("Image",        multi_items("IMAG", 1:5)),
  reflect("Expectation",  multi_items("CUEX", 1:3)),
  reflect("Value",        multi_items("PERV", 1:2)),
  reflect("Satisfaction", multi_items("CUSA", 1:3))
)

# interaction factors must be created after the measurement model is defined
mobi_xm <- interact(
  interaction_ortho("Image", "Expectation"),
  interaction_ortho("Image", "Value")
)

# structural model: note that name of the interactions factor should be
#  the names of its two main factors joined by a '.' in between.
mobi_sm <- structure(
  paths(to = "Satisfaction",
        from = c("Image", "Expectation", "Value",
                 "Image.Expectation", "Image.Value"))
)

# Load data, assemble model, and bootstrap using simplePLS
mobi_pls <- bootstrap_model(data = mobi,
                            measurement_model = mobi_mm,
                            interaction = mobi_xm,
                            structural_model = mobi_sm,
                            nboot = 500)

print_paths(mobi_pls)
}
\seealso{
\code{\link{structure}} \code{\link{measure}} \code{\link{paths}} \code{\link{interact}}
         \code{\link{create_model}} \code{\link{simplePLS}}
}

